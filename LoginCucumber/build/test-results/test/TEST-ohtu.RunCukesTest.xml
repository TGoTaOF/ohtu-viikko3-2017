<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ohtu.RunCukesTest" tests="0" skipped="0" failures="0" errors="0" timestamp="1970-01-01T00:00:00" hostname="dhcp-asv-125" time="0.0">
  <properties/>
  <system-out><![CDATA[Feature: User can log in with valid username/password-combination

  Scenario: nonexistent user can not login to                  ?[90m# ohtu/login.feature:13?[0m
    ?[32mGiven ?[0m?[32mcommand login is selected?[0m                            ?[90m# Stepdefs.command_login_selected()?[0m
    ?[32mWhen ?[0m?[32musername "?[0m?[32m?[1mrip?[0m?[32m" and password "?[0m?[32m?[1makkep?[0m?[32m" are entered?[0m       ?[90m# Stepdefs.a_username_and_password_are_entered(String,String)?[0m
    ?[32mThen ?[0m?[32msystem will respond with "?[0m?[32m?[1mwrong username or password?[0m?[32m"?[0m ?[90m# Stepdefs.system_will_respond_with(String)?[0m
Feature: A new user account can be created if a proper unused username and password are given

  Scenario: can not login with account that is not successfully created ?[90m# ohtu/new_user.feature:34?[0m
    ?[33mGiven ?[0m?[33muser "aa" with password "aa" is created?[0m
    ?[36mAnd ?[0m?[36mcommand login is selected?[0m                                       ?[90m# Stepdefs.command_login_selected()?[0m
    ?[36mWhen ?[0m?[36musername "?[0m?[36m?[1maa?[0m?[36m" and password "?[0m?[36m?[1maa?[0m?[36m" are entered?[0m                    ?[90m# Stepdefs.a_username_and_password_are_entered(String,String)?[0m
    ?[36mThen ?[0m?[36msystem will respond with "?[0m?[36m?[1mwrong username or password?[0m?[36m"?[0m          ?[90m# Stepdefs.system_will_respond_with(String)?[0m

10 Scenarios (?[33m7 undefined?[0m, ?[32m3 passed?[0m)
32 Steps (?[36m15 skipped?[0m, ?[33m8 undefined?[0m, ?[32m9 passed?[0m)
0m0.103s


You can implement missing steps with the snippets below:

@Given("^command new user is selected$")
public void command_new_user_is_selected() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@Given("^user \"([^\"]*)\" with password \"([^\"]*)\" is created$")
public void user_with_password_is_created(String arg1, String arg2) throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@Then("^System will respond with \"([^\"]*)\"$")
public void system_will_respond_with(String arg1) throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
